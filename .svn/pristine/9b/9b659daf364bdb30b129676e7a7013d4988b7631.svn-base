<?xml version="1.0"?>

<project name="adore-service-registry-standalone" default="build" basedir=".">

    <!-- Import Additional Ant Tasks -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
     <classpath>
      <pathelement location="./lib/ant-contrib.jar"/>
     </classpath>
    </taskdef>

    <!-- ===================================================================
      -  init - initialization common to the framework module
      -  =================================================================== -->
    <target name="module-init">
        <!-- Import Configuration File -->
        <property file="module.conf"/>
        <property name="module.name" value="${module.name}"/>
        <property name="module.root.dir"  value="."/>
        
        <!-- Extended module-specific properties -->
        <property name="module.version"  value="${module.version}"/>
        <property name="module.dist"  value="${module.root.dir}/dist"/>
        <property name="module.build" value="${module.root.dir}/tmp"/>
        <property name="junit.output.dir" value="${module.root.dir}/tmp/junit"/>
        <property name="module.doc" value="${module.root.dir}/doc"/>
        <property name="module.local.lib" value="${module.root.dir}/lib"/>
        <property name="module.lib" value="${module.root.dir}/${module.lib}"/>
        <property name="module.src" value="${module.root.dir}/${module.src}"/>

        <!-- Tomcat Properties -->
        <property name="tomcat.base.dir" value="${tomcat.home}"/>
        <property name="tomcat.webapp.dir" value="${tomcat.base.dir}/webapps"/>

        <!-- Set global properties for this build -->
        <property name="final.name" value="${module.name}-${module.version}"/>
        
        <!-- Build - Classpath Information -->
        <fileset id="module.jars" dir="${module.lib}">
            <include name="*.jar"/>            
        </fileset>
        <path id="module.classpath">
            <pathelement location="${module.build}" />
            <fileset refid="module.jars"/>
        </path>
        
        <fileset id="local.jars" dir="${module.local.lib}">
            <include name="*.jar"/>
        </fileset>
        <path id="local.classpath">
            <pathelement location="${module.local.lib}" />
            <fileset refid="local.jars"/>
        </path>
        
        <available property="junit.present" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask" />
        
    </target>

    <!-- Overrides parent definition of init -->
    <target name="init" depends="module-init"/>

    <target name="checkDependency" depends="init">
      <if>
        <not>
          <equals arg1="${module.depends.list}" arg2="" trim="true"/>
        </not>
      <then>
        <echo message="Compiling Modules"/>
        <foreach list="${module.depends.list}" delimiter=";" param="temp" target="compileDependency" inheritall="true"/>
      </then>
      </if>
    </target>

    <!-- Build Dependent Libraries - Called By build.xml -->
    <target name="compileDependency">
    <propertycopy name="target" from="${temp}" silent="true"/>
    <property name="d.module" value="${target}"/>
    <propertycopy name="target.version" from="${temp}.version" silent="true"/>
    <property name="d.module.version" value="${target.version}"/>
    <echo message="${d.module}"/>
    <echo message="${d.module.version}"/>
    <property name="d.module.dir" value="./dist"/>
     <if>
      <available file="${module.local.lib}/${d.module}-${d.module.version}.jar" type="file" property="local.file.present"/>
      <then>
       <echo message="${d.module}-${d.module.version}.jar is available"/>
      </then>
      <else>
       <echo message="${d.module}-${d.module.version}.jar was not found"/>
       <fail message="  '${module.local.lib}/${d.module}-${d.module.version}.jar' was not found"/>
      </else>
     </if> 
    </target>

    <!-- Compile This Module -->
    <target name="compile" depends="checkDependency">
      <mkdir dir="${module.build}"/>
      <!-- Compilation Units -->  
      <javac destdir="${module.build}"
             debug="${compile.debug}"
             deprecation="${compile.deprecation}"
             optimize="${compile.optimize}"
             srcdir="${module.src}/gov/lanl">
        <classpath refid="module.classpath" />
        <classpath refid="local.classpath" />
        <include name="util/HttpDate.java"/>
        <include name="util/properties/*.java"/>
        <include name="ockham/**/*.java"/>
	    <include name="registryclient/**/*.java"/>
      </javac>
    </target>
    
    <!-- Build This Project - Generate JAR / TAR / WAR Archives -->
    <target name="build" depends="compile">
      <mkdir dir="${module.dist}"/>
            
      <jar jarfile="${module.dist}/${final.name}.jar" basedir="${module.build}"/>
      
      <copy file="${module.root.dir}/bin/env-dist.sh" tofile="${module.root.dir}/bin/env.sh"/>
      <replace file="${module.root.dir}/bin/env.sh" propertyFile="${module.root.dir}/module.conf">
        <replacefilter token="$ADORE_XMLTAPE_RESOLVERURL" property="adore-xmltape.ResolverURL"/>
        <replacefilter token="$ADORE_XMLTAPE_ACCESSORURL" property="adore-xmltape.AccessorURL"/>
        <replacefilter token="$ADORE_ARCFILE_RESOLVERURL" property="adore-arcfile.ResolverURL"/>
        <replacefilter token="$ADORE_XMLTAPE_XQUERY_RESOLVERURL" property="adore-xmltape-xquery.ResolverURL"/>
        <replacefilter token="$ADORE_SERVICE_REGISTRY_REGISTRYRECORDHANDLERURL" property="adore-service-registry.RegistryRecordHandlerURL"/>
        <replacefilter token="$ADORE_SERVICE_REGISTRY_OAIURL" property="adore-service-registry.OAIURL"/>
      </replace>

      <tar destfile="${module.dist}/${final.name}.tar.gz" compression="gzip">
        <!-- Copy project components into archive -->
        <tarfileset prefix="${module.name}" dir="${module.root.dir}">
          <include name="README"/>
          <include name="build-standalone.xml"/>
          <include name="module.conf"/>
          <include name="module-dist.conf"/>
          <include name="etc/**"/>
          <include name="bin/**"/>
          <include name="lib/*.jar"/>
          <include name="src/web/**"/>
        </tarfileset>
        <!-- Copy Generated jar file into archive -->
        <tarfileset prefix="${module.name}/lib" dir="${module.dist}" includes="${final.name}.jar"/>
        <!-- Copy required library files into archive -->
        <tarfileset prefix="${module.name}/lib" dir="${module.lib}">
        <!-- Define includes here -->
	      <include name="commons-collections.jar"/>
	      <include name="COMMONS-COLLECTIONS.LICENSE"/>
	      <include name="commons-dbcp.jar"/>
	      <include name="COMMONS-DBCP.LICENSE"/>
	      <include name="commons-pool-1.1.jar"/>
	      <include name="COMMONS-POOL.LICENSE"/>
	      <include name="mysql-connector-java-5.1.5-bin.jar"/>
	      <include name="MYSQL-CONNECTOR.LICENSE"/>
	      <include name="oaiharvester-2.9.jar"/>
	      <include name="xercesImpl.jar"/>
	      <include name="XERCESIMPL.LICENSE"/>
          <include name="ant-contrib.jar"/>
          <include name="ANT-CONTRIB.LICENSE"/>        
          <include name="jaxen-1.1.8.jar"/>
          <include name="JAXEN.LICENSE"/>
          <include name="jdom.jar"/>
          <include name="JDOM.LICENSE"/>
          <include name="junit.jar"/>
          <include name="JUNIT.LICENSE"/>
          <include name="log4j-1.2.8.jar"/>
          <include name="LOG4J.LICENSE"/>
          <include name="mysql-connector-java-5.1.5-bin.jar"/>
          <include name="MYSQL-CONNECTOR.LICENSE"/>
          <include name="oaicat.jar"/>
          <include name="OAICAT.LICENSE"/>
          <include name="oaiharvester-2.9.jar"/>
          <include name="OAIHARVESTER.LICENSE"/>
          <include name="oom.jar"/>
          <include name="OOM.LICENSE"/>
          <include name="oomRef.jar"/>
          <include name="xalan.jar"/>
          <include name="XALAN.LICENSE"/>
          <include name="xalan.jar"/>
        </tarfileset>
        <!-- Copy source files into archive -->
        <tarfileset prefix="${module.name}/src/gov/lanl" dir="${module.src}/gov/lanl" excludes="CVS">
          <include name="util/HttpDate.java"/>
          <include name="util/properties/*.java"/>
          <include name="ockham/**/*.java"/>
	      <include name="registryclient/**/*.java"/>
        </tarfileset>
      </tar>
       
      <!-- RegEx on Properties File -->
      
      <copy file="${module.root.dir}/src/web/WEB-INF/classes/ockham.properties" todir="${module.build}/web/WEB-INF/classes"/>
      <replace file="${module.build}/web/WEB-INF/classes/ockham.properties" propertyFile="${module.root.dir}/module.conf">
        <replacefilter token="$MODULE.NSPACE" property="module.nspace"/>
        <replacefilter token="$MODULE.SCHEMA" property="module.schema"/>
	    <replacefilter token="$MODULE.BASEURL" property="adore-service-registry.OAIURL"/>
        <replacefilter token="$MODULE.PREFIX" property="module.prefix"/>
        <replacefilter token="$MODULE.DB.JDBCDRIVER" property="module.db.jdbcdriver"/>
        <replacefilter token="$MODULE.DB.JDBCURL" property="module.db.jdbcurl"/>
        <replacefilter token="$MODULE.DB.LOGIN" property="module.db.login"/>
        <replacefilter token="$MODULE.DB.PASSWD" property="module.db.passwd"/>
        <replacefilter token="$MODULE.ADMIN.EMAIL" property="module.admin.email"/>
        <replacefilter token="$MODULE_NAME" property="module.name"/>
      </replace>

      <copy file="${module.root.dir}/src/web/WEB-INF/web.xml" todir="${module.build}/web/WEB-INF"/>
      <replace file="${module.build}/web/WEB-INF/web.xml">
        <replacefilter token="$TOMCAT.WEBAPPS" value="${tomcat.home}/webapps"/>
        <replacefilter token="$MODULE_NAME" value="${module.name}"/>
      </replace>

      <copy todir="${module.build}/web">
        <fileset dir="${module.root.dir}/src/web"/>
      </copy>
      <replace dir="${module.build}/web">
        <replacefilter token="$MODULE_NAME" value="${module.name}"/>
        <replacefilter token="$TOMCAT.WEBAPPS" value="${tomcat.home}/webapps"/>
        <replacefilter token="$MODULE_VERSION" value="${module.version}"/>
        <replacefilter token="$ADMIN_EMAIL" value="${module.admin.email}"/>
        <replacefilter token="$TOMCAT_URL" value="${module.tomcat.url}"/>
        <replacefilter token="$LOCAL_RFR_ID" value="${module.local.rfr.id}"/>
        <replacefilter token="$ADORE_SERVICE_REGISTRY_OAIURL" value="${adore-service-registry.OAIURL}"/>
      </replace>      

      <war destfile="${module.dist}/${module.name}.war" webxml="${module.build}/web/WEB-INF/web.xml">
        <fileset dir="${module.build}/web" excludes="WEB-INF/web.xml"/>
        <!-- Define Required Modules -->
        <lib dir="${module.dist}">
          <include name="${final.name}.jar"/>
        </lib>
        <lib dir="${module.local.lib}">
          <include name="*.jar"/>
          <exclude name="servlet.jar"/>
        </lib>
        <!-- Define Required Libaries -->
        <lib dir="${module.lib}">
	      <include name="commons-collections.jar"/>
	      <include name="COMMONS-COLLECTIONS.LICENSE"/>
	      <include name="commons-dbcp.jar"/>
	      <include name="COMMONS-DBCP.LICENSE"/>
	      <include name="commons-pool-1.1.jar"/>
	      <include name="COMMONS-POOL.LICENSE"/>
	      <include name="mysql-connector-java-5.1.5-bin.jar"/>
	      <include name="MYSQL-CONNECTOR.LICENSE"/>
	      <include name="oaiharvester-2.9.jar"/>
	      <include name="xercesImpl.jar"/>
	      <include name="XERCESIMPL.LICENSE"/>
          <include name="ant-contrib.jar"/>
          <include name="ANT-CONTRIB.LICENSE"/>        
          <include name="jaxen-1.1.8.jar"/>
          <include name="JAXEN.LICENSE"/>
          <include name="jdom.jar"/>
          <include name="JDOM.LICENSE"/>
          <include name="junit.jar"/>
          <include name="JUNIT.LICENSE"/>
          <include name="log4j-1.2.8.jar"/>
          <include name="LOG4J.LICENSE"/>
          <include name="mysql-connector-java-5.1.5-bin.jar"/>
          <include name="MYSQL-CONNECTOR.LICENSE"/>
          <include name="oaicat.jar"/>
          <include name="OAICAT.LICENSE"/>
          <include name="oaiharvester-2.9.jar"/>
          <include name="OAIHARVESTER.LICENSE"/>
          <include name="oom.jar"/>
          <include name="OOM.LICENSE"/>
          <include name="oomRef.jar"/>
          <include name="xalan.jar"/>
          <include name="XALAN.LICENSE"/>
        </lib>
      </war>
    </target>

    <target name="deploy" depends="init">
      <copy file="${module.dist}/${module.name}.war" todir="${tomcat.webapp.dir}"/>
    </target>

    <!-- Delete the ${build} and ${dist} directory trees -->
    <target name="clean" depends="init" description="Destroys all generated files and dirs." >
        <delete dir="${module.build}"/>
        <delete dir="${module.dist}"/>
        <delete dir="${module.doc}"/>
    </target>
    
    <!-- Run Junit test -->
    <target name="junit" depends="compile" description="Runs unit tests">
      <fail unless="junit.present">
      ##################################################################
      JUnit not found.
      Please make sure junit.jar is in ANT_HOME/lib, or made available
      to Ant using other mechanisms like -lib or CLASSPATH.
      ##################################################################
      </fail>
      <mkdir dir="${junit.output.dir}" />
      <!-- RegEx on Properties File -->
      <copy file="${module.root.dir}/etc/log4j.properties" todir="${module.build}/"/>
      <copy file="${module.root.dir}/src/web/WEB-INF/classes/ockham.properties" todir="${module.build}/"/>
      <replace file="${module.build}/ockham.properties" propertyFile="${module.root.dir}/module.conf">
	    <replacefilter token="$MODULE.DB.JDBCDRIVER" property="module.db.jdbcdriver"/>
	    <replacefilter token="$MODULE.DB.JDBCURL" property="module.db.jdbcurl"/>
        <replacefilter token="$MODULE.DB.LOGIN" property="module.db.login"/>
	    <replacefilter token="$MODULE.DB.PASSWD" property="module.db.passwd"/>
      </replace>

      <junit printsummary="off" haltonfailure="no" errorProperty="tests.failed" failureProperty="tests.failed">
	    <sysproperty key="ADORE_SERVICE_REGISTRY_REGISTRYRECORDHANDLERURL" value="${adore-service-registry.RegistryRecordHandlerURL}" />
	    <sysproperty key="ADORE_SERVICE_REGISTRY_OAIURL" value="${adore-service-registry.OAIURL}" />
	    <classpath refid="module.classpath" />
	    <formatter type="xml" />
	    <formatter type="brief" usefile="false" />
	    <batchtest fork="yes" todir="${junit.output.dir}">
	      <fileset dir="${module.src}" includes="gov/lanl/ockham/**/*Test.java" />
	    </batchtest>
      </junit>
      
      <fail if="tests.failed">Tests failed!</fail>
    </target>
    
    <!-- create javadoc -->
    <target name="javadoc" depends="init">
        <javadoc
             destdir="${module.doc}"
             author="true"
             version="true"
             use="true"
             windowtitle="Service Registry API">
        <classpath refid="local.classpath" />
        <classpath refid="module.classpath" />
        <fileset dir="${module.src}/gov/lanl">
          <include name="util/HttpDate.java"/>
          <include name="util/properties/*.java"/>
          <include name="ockham/**/*.java"/>
	      <include name="registryclient/**/*.java"/>
        </fileset>
        <doctitle><![CDATA[<h1>aDORe Service Registry</h1>]]></doctitle>
        <bottom><![CDATA[<i>Copyright &#169; 2006 LANL All Rights Reserved.</i>]]></bottom>
      </javadoc>
    </target>

    <!-- Create Database -->
    <target name="createdb" depends="init">
      <copy file="${module.root.dir}/src/sql/Metadata.sql" todir="${module.build}/sql" overwrite="true"/>
      <copy file="${module.root.dir}/src/sql/Metadata-defaults.sql" todir="${module.build}/sql" overwrite="true"/>
      <sql
         driver="${module.db.jdbcdriver}"
         url="${module.db.jdbcurl}"
         userid="${module.db.login}"
         password="${module.db.passwd}" 
         classpath="${module.lib}/mysql-connector-java-5.1.5-bin.jar">
         <transaction  src="${module.build}/sql/Metadata.sql"/>
         <transaction  src="${module.build}/sql/Metadata-defaults.sql"/>
         <transaction>
         INSERT INTO `OAI_SETS` VALUES ('agents','agents','This set is the collection of records created by peer: agents'),('collections','collections','This set is the collection of records created by peer: collections'),('services','services','This set is the collection of records created by peer: services'); 
         </transaction>
      </sql>   
    </target>


    <!-- Clean Database -->
    <target name="cleandb" depends="init">
      <sql
         driver="${module.db.jdbcdriver}"
         url="${module.db.jdbcurl}"
         userid="${module.db.login}"
         password="${module.db.passwd}" 
         classpath="${module.lib}/mysql-connector-java-5.1.5-bin.jar">
         <transaction>
         DELETE FROM OAI_RECORDS;
         DELETE FROM OAI_RECORD_SET_MAP;
         DELETE FROM OAI_SETS;
         INSERT INTO `OAI_SETS` VALUES ('agents','agents','This set is the collection of records created by peer: agents'),('collections','collections','This set is the collection of records created by peer: collections'),('services','services','This set is the collection of records created by peer: services'); 
         </transaction>
      </sql>   
    </target>

</project>
